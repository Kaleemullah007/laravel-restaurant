/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/assets/libs/switch/js/switch.min.js":
/*!*******************************************************!*\
  !*** ./resources/assets/libs/switch/js/switch.min.js ***!
  \*******************************************************/
/***/ (() => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n/*\\\r\n|*| ========================================================================\r\n|*| Bootstrap Toggle: bootstrap4-toggle.js v3.6.1\r\n|*| https://gitbrent.github.io/bootstrap4-toggle/\r\n|*| ========================================================================\r\n|*| Copyright 2018-2019 Brent Ely\r\n|*| Licensed under MIT\r\n|*| ========================================================================\r\n\\*/\n!function (a) {\n  \"use strict\";\n\n  function l(t, e) {\n    this.$element = a(t), this.options = a.extend({}, this.defaults(), e), this.render();\n  }\n\n  l.VERSION = \"3.6.0\", l.DEFAULTS = {\n    on: \"On\",\n    off: \"Off\",\n    onstyle: \"primary\",\n    offstyle: \"light\",\n    size: \"normal\",\n    style: \"\",\n    width: null,\n    height: null\n  }, l.prototype.defaults = function () {\n    return {\n      on: this.$element.attr(\"data-on\") || l.DEFAULTS.on,\n      off: this.$element.attr(\"data-off\") || l.DEFAULTS.off,\n      onstyle: this.$element.attr(\"data-onstyle\") || l.DEFAULTS.onstyle,\n      offstyle: this.$element.attr(\"data-offstyle\") || l.DEFAULTS.offstyle,\n      size: this.$element.attr(\"data-size\") || l.DEFAULTS.size,\n      style: this.$element.attr(\"data-style\") || l.DEFAULTS.style,\n      width: this.$element.attr(\"data-width\") || l.DEFAULTS.width,\n      height: this.$element.attr(\"data-height\") || l.DEFAULTS.height\n    };\n  }, l.prototype.render = function () {\n    this._onstyle = \"btn-\" + this.options.onstyle, this._offstyle = \"btn-\" + this.options.offstyle;\n    var t = \"large\" === this.options.size || \"lg\" === this.options.size ? \"btn-lg\" : \"small\" === this.options.size || \"sm\" === this.options.size ? \"btn-sm\" : \"mini\" === this.options.size || \"xs\" === this.options.size ? \"btn-xs\" : \"\",\n        e = a('<label for=\"' + this.$element.prop(\"id\") + '\" class=\"btn\">').html(this.options.on).addClass(this._onstyle + \" \" + t),\n        s = a('<label for=\"' + this.$element.prop(\"id\") + '\" class=\"btn\">').html(this.options.off).addClass(this._offstyle + \" \" + t),\n        o = a('<span class=\"toggle-handle btn btn-light\">').addClass(t),\n        i = a('<div class=\"toggle-group\">').append(e, s, o),\n        l = a('<div class=\"toggle btn\" data-toggle=\"toggle\" role=\"button\">').addClass(this.$element.prop(\"checked\") ? this._onstyle : this._offstyle + \" off\").addClass(t).addClass(this.options.style);\n    this.$element.wrap(l), a.extend(this, {\n      $toggle: this.$element.parent(),\n      $toggleOn: e,\n      $toggleOff: s,\n      $toggleGroup: i\n    }), this.$toggle.append(i);\n    var n = this.options.width || Math.max(e.outerWidth(), s.outerWidth()) + o.outerWidth() / 2,\n        h = this.options.height || Math.max(e.outerHeight(), s.outerHeight());\n    e.addClass(\"toggle-on\"), s.addClass(\"toggle-off\"), this.$toggle.css({\n      width: n,\n      height: h\n    }), this.options.height && (e.css(\"line-height\", e.height() + \"px\"), s.css(\"line-height\", s.height() + \"px\")), this.update(!0), this.trigger(!0);\n  }, l.prototype.toggle = function () {\n    this.$element.prop(\"checked\") ? this.off() : this.on();\n  }, l.prototype.on = function (t) {\n    if (this.$element.prop(\"disabled\")) return !1;\n    this.$toggle.removeClass(this._offstyle + \" off\").addClass(this._onstyle), this.$element.prop(\"checked\", !0), t || this.trigger();\n  }, l.prototype.off = function (t) {\n    if (this.$element.prop(\"disabled\")) return !1;\n    this.$toggle.removeClass(this._onstyle).addClass(this._offstyle + \" off\"), this.$element.prop(\"checked\", !1), t || this.trigger();\n  }, l.prototype.enable = function () {\n    this.$toggle.removeClass(\"disabled\"), this.$toggle.removeAttr(\"disabled\"), this.$element.prop(\"disabled\", !1);\n  }, l.prototype.disable = function () {\n    this.$toggle.addClass(\"disabled\"), this.$toggle.attr(\"disabled\", \"disabled\"), this.$element.prop(\"disabled\", !0);\n  }, l.prototype.update = function (t) {\n    this.$element.prop(\"disabled\") ? this.disable() : this.enable(), this.$element.prop(\"checked\") ? this.on(t) : this.off(t);\n  }, l.prototype.trigger = function (t) {\n    this.$element.off(\"change.bs.toggle\"), t || this.$element.change(), this.$element.on(\"change.bs.toggle\", a.proxy(function () {\n      this.update();\n    }, this));\n  }, l.prototype.destroy = function () {\n    this.$element.off(\"change.bs.toggle\"), this.$toggleGroup.remove(), this.$element.removeData(\"bs.toggle\"), this.$element.unwrap();\n  };\n  var t = a.fn.bootstrapToggle;\n  a.fn.bootstrapToggle = function (o) {\n    var i = Array.prototype.slice.call(arguments, 1)[0];\n    return this.each(function () {\n      var t = a(this),\n          e = t.data(\"bs.toggle\"),\n          s = \"object\" == _typeof(o) && o;\n      e || t.data(\"bs.toggle\", e = new l(this, s)), \"string\" == typeof o && e[o] && \"boolean\" == typeof i ? e[o](i) : \"string\" == typeof o && e[o] && e[o]();\n    });\n  }, a.fn.bootstrapToggle.Constructor = l, a.fn.toggle.noConflict = function () {\n    return a.fn.bootstrapToggle = t, this;\n  }, a(function () {\n    a(\"input[type=checkbox][data-toggle^=toggle]\").bootstrapToggle();\n  }), a(document).on(\"click.bs.toggle\", \"div[data-toggle^=toggle]\", function (t) {\n    a(this).find(\"input[type=checkbox]\").bootstrapToggle(\"toggle\"), t.preventDefault();\n  });\n}(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/assets/libs/switch/js/switch.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/assets/libs/switch/js/switch.min.js"]();
/******/ 	
/******/ })()
;